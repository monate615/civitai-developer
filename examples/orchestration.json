{
    "openapi": "3.0.1",
    "info": {
      "title": "Civitai Orchestration Consumer API",
      "version": "v1"
    },
    "paths": {
      "/v1/consumer/consumption": {
        "get": {
          "operationId": "getConsumption",
          "tags": ["Consumption"],
          "parameters": [
            {
              "name": "startDate",
              "in": "query",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ConsumptionDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/consumer/coverage": {
        "get": {
          "tags": ["Coverage"],
          "operationId": "getCoverage",
          "summary": "Get coverage of particular models",
          "parameters": [
            {
              "name": "model",
              "in": "query",
              "required": true,
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AIR"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/ProviderAssetAvailability"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/v1/consumer/jobs/{jobId}": {
        "get": {
          "tags": ["Jobs"],
          "operationId": "getJobs",
          "summary": "Get the status of a job by looking up the jobId",
          "parameters": [
            {
              "name": "jobId",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "detailed",
              "in": "query",
              "description": "",
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/JobStatusCollection"
                  }
                }
              }
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            },
            "default": {
              "description": "Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": ["Jobs"],
          "operationId": "putJobs",
          "summary": "Taint a specific job by its id",
          "parameters": [
            {
              "name": "jobId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaintJobRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaintJobRequest"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/TaintJobRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            },
            "default": {
              "description": "Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": ["Jobs"],
          "operationId": "deleteJobs",
          "summary": "Cancels a specific job by looking it up by jobId",
          "parameters": [
            {
              "name": "jobId",
              "in": "path",
              "description": "The id of the job to cancel",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "force",
              "in": "query",
              "description": "Force cancellation, even when the job is currently being worked on",
              "schema": {
                "type": "boolean",
                "default": true
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            },
            "404": {
              "description": "Not Found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            },
            "default": {
              "description": "Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/consumer/jobs/query": {
        "post": {
          "tags": ["Jobs"],
          "operationId": "postJobQuery",
          "summary": "Query for previously submitted jobs by looking up the properties",
          "parameters": [
            {
              "name": "detailed",
              "in": "query",
              "description": "Wether to include the original job definition",
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryJobsRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryJobsRequest"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryJobsRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/QueryJobsResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "AIR": {
          "type": "object",
          "properties": {
            "value": {
              "type": "string",
              "nullable": true
            },
            "legacyId": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "baseModel": {
              "$ref": "#/components/schemas/BaseModel"
            },
            "ecosystem": {
              "$ref": "#/components/schemas/ReadOnlySpan`1"
            },
            "type": {
              "$ref": "#/components/schemas/ReadOnlySpan`1"
            },
            "source": {
              "$ref": "#/components/schemas/ReadOnlySpan`1"
            },
            "id": {
              "$ref": "#/components/schemas/ReadOnlySpan`1"
            },
            "layer": {
              "$ref": "#/components/schemas/ReadOnlySpan`1"
            },
            "format": {
              "$ref": "#/components/schemas/ReadOnlySpan`1"
            }
          },
          "additionalProperties": false
        },
        "Assembly": {
          "type": "object",
          "properties": {
            "definedTypes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TypeInfo"
              },
              "nullable": true,
              "readOnly": true
            },
            "exportedTypes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Type"
              },
              "nullable": true,
              "readOnly": true
            },
            "entryPoint": {
              "$ref": "#/components/schemas/MethodInfo"
            },
            "fullName": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "imageRuntimeVersion": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "isDynamic": {
              "type": "boolean",
              "readOnly": true
            },
            "location": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "reflectionOnly": {
              "type": "boolean",
              "readOnly": true
            },
            "isCollectible": {
              "type": "boolean",
              "readOnly": true
            },
            "isFullyTrusted": {
              "type": "boolean",
              "readOnly": true
            },
            "customAttributes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CustomAttributeData"
              },
              "nullable": true,
              "readOnly": true
            },
            "manifestModule": {
              "$ref": "#/components/schemas/Module"
            },
            "modules": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Module"
              },
              "nullable": true,
              "readOnly": true
            },
            "hostContext": {
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "securityRuleSet": {
              "$ref": "#/components/schemas/SecurityRuleSet"
            }
          },
          "additionalProperties": false
        },
        "AssetType": {
          "enum": [
            "Lora",
            "Hypernetwork",
            "TextualInversion",
            "Lycoris",
            "Checkpoint",
            "Vae",
            "LoCon"
          ],
          "type": "string"
        },
        "BaseModel": {
          "enum": ["SD_1_5", "SDXL"],
          "type": "string"
        },
        "CallingConventions": {
          "enum": ["Standard", "VarArgs", "Any", "HasThis", "ExplicitThis"],
          "type": "string"
        },
        "ClearAssetRequest": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/JobRequest"
            }
          ],
          "properties": {
            "jobId": {
              "type": "string",
              "description": "The ID of the original job to clear",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ComfyJob": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/Job"
            }
          ],
          "properties": {
            "params": {
              "type": "object",
              "additionalProperties": {},
              "description": "A untyped set of parameters that are associated with this job",
              "nullable": true
            },
            "type": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "claimDuration": {
              "$ref": "#/components/schemas/TimeSpan"
            }
          },
          "additionalProperties": false
        },
        "ComfyJobRequest": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/JobRequest"
            }
          ],
          "properties": {
            "params": {
              "type": "object",
              "additionalProperties": {},
              "description": "A untyped set of parameters that are associated with this job",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ConstructorInfo": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "declaringType": {
              "$ref": "#/components/schemas/Type"
            },
            "reflectedType": {
              "$ref": "#/components/schemas/Type"
            },
            "module": {
              "$ref": "#/components/schemas/Module"
            },
            "customAttributes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CustomAttributeData"
              },
              "nullable": true,
              "readOnly": true
            },
            "isCollectible": {
              "type": "boolean",
              "readOnly": true
            },
            "metadataToken": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "attributes": {
              "$ref": "#/components/schemas/MethodAttributes"
            },
            "methodImplementationFlags": {
              "$ref": "#/components/schemas/MethodImplAttributes"
            },
            "callingConvention": {
              "$ref": "#/components/schemas/CallingConventions"
            },
            "isAbstract": {
              "type": "boolean",
              "readOnly": true
            },
            "isConstructor": {
              "type": "boolean",
              "readOnly": true
            },
            "isFinal": {
              "type": "boolean",
              "readOnly": true
            },
            "isHideBySig": {
              "type": "boolean",
              "readOnly": true
            },
            "isSpecialName": {
              "type": "boolean",
              "readOnly": true
            },
            "isStatic": {
              "type": "boolean",
              "readOnly": true
            },
            "isVirtual": {
              "type": "boolean",
              "readOnly": true
            },
            "isAssembly": {
              "type": "boolean",
              "readOnly": true
            },
            "isFamily": {
              "type": "boolean",
              "readOnly": true
            },
            "isFamilyAndAssembly": {
              "type": "boolean",
              "readOnly": true
            },
            "isFamilyOrAssembly": {
              "type": "boolean",
              "readOnly": true
            },
            "isPrivate": {
              "type": "boolean",
              "readOnly": true
            },
            "isPublic": {
              "type": "boolean",
              "readOnly": true
            },
            "isConstructedGenericMethod": {
              "type": "boolean",
              "readOnly": true
            },
            "isGenericMethod": {
              "type": "boolean",
              "readOnly": true
            },
            "isGenericMethodDefinition": {
              "type": "boolean",
              "readOnly": true
            },
            "containsGenericParameters": {
              "type": "boolean",
              "readOnly": true
            },
            "methodHandle": {
              "$ref": "#/components/schemas/RuntimeMethodHandle"
            },
            "isSecurityCritical": {
              "type": "boolean",
              "readOnly": true
            },
            "isSecuritySafeCritical": {
              "type": "boolean",
              "readOnly": true
            },
            "isSecurityTransparent": {
              "type": "boolean",
              "readOnly": true
            },
            "memberType": {
              "$ref": "#/components/schemas/MemberTypes"
            }
          },
          "additionalProperties": false
        },
        "ConsumptionDetails": {
          "type": "object",
          "properties": {
            "images": {
              "type": "integer",
              "format": "int32"
            },
            "totalCost": {
              "type": "number",
              "format": "double"
            },
            "startDate": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "endDate": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CopyAssetRequest": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/JobRequest"
            }
          ],
          "properties": {
            "jobId": {
              "type": "string",
              "description": "The ID of the original job to copy",
              "nullable": true
            },
            "assetName": {
              "type": "string",
              "description": "The name of the asset to copy",
              "nullable": true
            },
            "destinationUri": {
              "type": "string",
              "description": "The destination URI to copy the asset to",
              "format": "uri",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CustomAttributeData": {
          "type": "object",
          "properties": {
            "attributeType": {
              "$ref": "#/components/schemas/Type"
            },
            "constructor": {
              "$ref": "#/components/schemas/ConstructorInfo"
            },
            "constructorArguments": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CustomAttributeTypedArgument"
              },
              "nullable": true,
              "readOnly": true
            },
            "namedArguments": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CustomAttributeNamedArgument"
              },
              "nullable": true,
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "CustomAttributeNamedArgument": {
          "type": "object",
          "properties": {
            "memberInfo": {
              "$ref": "#/components/schemas/MemberInfo"
            },
            "typedValue": {
              "$ref": "#/components/schemas/CustomAttributeTypedArgument"
            },
            "memberName": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "isField": {
              "type": "boolean",
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "CustomAttributeTypedArgument": {
          "type": "object",
          "properties": {
            "argumentType": {
              "$ref": "#/components/schemas/Type"
            },
            "value": {
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "DeleteBlobRequest": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/JobRequest"
            }
          ],
          "properties": {
            "key": {
              "type": "string",
              "description": "Get or set the key of the blob to pin",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "EventAttributes": {
          "enum": ["None", "SpecialName", "RTSpecialName"],
          "type": "string"
        },
        "EventInfo": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "declaringType": {
              "$ref": "#/components/schemas/Type"
            },
            "reflectedType": {
              "$ref": "#/components/schemas/Type"
            },
            "module": {
              "$ref": "#/components/schemas/Module"
            },
            "customAttributes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CustomAttributeData"
              },
              "nullable": true,
              "readOnly": true
            },
            "isCollectible": {
              "type": "boolean",
              "readOnly": true
            },
            "metadataToken": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "memberType": {
              "$ref": "#/components/schemas/MemberTypes"
            },
            "attributes": {
              "$ref": "#/components/schemas/EventAttributes"
            },
            "isSpecialName": {
              "type": "boolean",
              "readOnly": true
            },
            "addMethod": {
              "$ref": "#/components/schemas/MethodInfo"
            },
            "removeMethod": {
              "$ref": "#/components/schemas/MethodInfo"
            },
            "raiseMethod": {
              "$ref": "#/components/schemas/MethodInfo"
            },
            "isMulticast": {
              "type": "boolean",
              "readOnly": true
            },
            "eventHandlerType": {
              "$ref": "#/components/schemas/Type"
            }
          },
          "additionalProperties": false
        },
        "Exception": {
          "type": "object",
          "properties": {
            "targetSite": {
              "$ref": "#/components/schemas/MethodBase"
            },
            "message": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "data": {
              "type": "object",
              "additionalProperties": {},
              "nullable": true,
              "readOnly": true
            },
            "innerException": {
              "$ref": "#/components/schemas/Exception"
            },
            "helpLink": {
              "type": "string",
              "nullable": true
            },
            "source": {
              "type": "string",
              "nullable": true
            },
            "hResult": {
              "type": "integer",
              "format": "int32"
            },
            "stackTrace": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "FieldAttributes": {
          "enum": [
            "PrivateScope",
            "Private",
            "FamANDAssem",
            "Assembly",
            "Family",
            "FamORAssem",
            "Public",
            "FieldAccessMask",
            "Static",
            "InitOnly",
            "Literal",
            "NotSerialized",
            "HasFieldRVA",
            "SpecialName",
            "RTSpecialName",
            "HasFieldMarshal",
            "PinvokeImpl",
            "HasDefault",
            "ReservedMask"
          ],
          "type": "string"
        },
        "FieldInfo": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "declaringType": {
              "$ref": "#/components/schemas/Type"
            },
            "reflectedType": {
              "$ref": "#/components/schemas/Type"
            },
            "module": {
              "$ref": "#/components/schemas/Module"
            },
            "customAttributes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CustomAttributeData"
              },
              "nullable": true,
              "readOnly": true
            },
            "isCollectible": {
              "type": "boolean",
              "readOnly": true
            },
            "metadataToken": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "memberType": {
              "$ref": "#/components/schemas/MemberTypes"
            },
            "attributes": {
              "$ref": "#/components/schemas/FieldAttributes"
            },
            "fieldType": {
              "$ref": "#/components/schemas/Type"
            },
            "isInitOnly": {
              "type": "boolean",
              "readOnly": true
            },
            "isLiteral": {
              "type": "boolean",
              "readOnly": true
            },
            "isPinvokeImpl": {
              "type": "boolean",
              "readOnly": true
            },
            "isSpecialName": {
              "type": "boolean",
              "readOnly": true
            },
            "isStatic": {
              "type": "boolean",
              "readOnly": true
            },
            "isAssembly": {
              "type": "boolean",
              "readOnly": true
            },
            "isFamily": {
              "type": "boolean",
              "readOnly": true
            },
            "isFamilyAndAssembly": {
              "type": "boolean",
              "readOnly": true
            },
            "isFamilyOrAssembly": {
              "type": "boolean",
              "readOnly": true
            },
            "isPrivate": {
              "type": "boolean",
              "readOnly": true
            },
            "isPublic": {
              "type": "boolean",
              "readOnly": true
            },
            "isSecurityCritical": {
              "type": "boolean",
              "readOnly": true
            },
            "isSecuritySafeCritical": {
              "type": "boolean",
              "readOnly": true
            },
            "isSecurityTransparent": {
              "type": "boolean",
              "readOnly": true
            },
            "fieldHandle": {
              "$ref": "#/components/schemas/RuntimeFieldHandle"
            }
          },
          "additionalProperties": false
        },
        "FixedPriority": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/Priority"
            }
          ],
          "properties": {
            "value": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          "additionalProperties": false,
          "description": "A fixed priority with a single value"
        },
        "GenericParameterAttributes": {
          "enum": [
            "None",
            "Covariant",
            "Contravariant",
            "VarianceMask",
            "ReferenceTypeConstraint",
            "NotNullableValueTypeConstraint",
            "DefaultConstructorConstraint",
            "SpecialConstraintMask"
          ],
          "type": "string"
        },
        "GetBlobRequest": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/JobRequest"
            }
          ],
          "properties": {
            "key": {
              "type": "string",
              "description": "Get or set the key of the blob to upload",
              "nullable": true
            },
            "duration": {
              "$ref": "#/components/schemas/TimeSpan"
            }
          },
          "additionalProperties": false
        },
        "ICustomAttributeProvider": {
          "type": "object",
          "additionalProperties": false
        },
        "ImageEmbeddingJob": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/Job"
            }
          ],
          "properties": {
            "imageUrl": {
              "type": "string",
              "nullable": true
            },
            "type": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "ImageEmbeddingJobRequest": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/JobRequest"
            }
          ],
          "properties": {
            "imageUrl": {
              "type": "string",
              "description": "The url of the image to get embeddings for",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ImageJobControlNet": {
          "type": "object",
          "properties": {
            "preprocessor": {
              "$ref": "#/components/schemas/ImageTransformer"
            },
            "weight": {
              "type": "number",
              "format": "double"
            },
            "startStep": {
              "type": "number",
              "format": "double"
            },
            "endStep": {
              "type": "number",
              "format": "double"
            },
            "blobKey": {
              "type": "string",
              "nullable": true
            },
            "imageUrl": {
              "type": "string",
              "format": "uri",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ImageJobNetworkParams": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#/components/schemas/AssetType"
            },
            "strength": {
              "type": "number",
              "description": "In case of Lora and LoCon, set the strength of the network",
              "format": "double",
              "nullable": true
            },
            "triggerWord": {
              "type": "string",
              "description": "In case of a TextualInversion, set the trigger word of the network",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ImageJobParams": {
          "required": ["height", "width"],
          "type": "object",
          "properties": {
            "prompt": {
              "type": "string",
              "nullable": true
            },
            "negativePrompt": {
              "type": "string",
              "nullable": true
            },
            "scheduler": {
              "$ref": "#/components/schemas/Scheduler"
            },
            "steps": {
              "maximum": 150,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            },
            "cfgScale": {
              "maximum": 30,
              "minimum": 1,
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "width": {
              "maximum": 2048,
              "minimum": 64,
              "type": "integer",
              "format": "int32"
            },
            "height": {
              "maximum": 2048,
              "minimum": 64,
              "type": "integer",
              "format": "int32"
            },
            "seed": {
              "maximum": 4294967295,
              "minimum": -1,
              "type": "integer",
              "format": "int64"
            },
            "clipSkip": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "ImageResourceTrainingJob": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/Job"
            }
          ],
          "properties": {
            "model": {
              "type": "string",
              "nullable": true
            },
            "trainingData": {
              "type": "string",
              "description": "A url referring data that needs to be trained upon",
              "format": "uri",
              "nullable": true
            },
            "params": {
              "type": "object",
              "additionalProperties": {},
              "description": "A untyped set of parameters that are associated with this job",
              "nullable": true
            },
            "cost": {
              "type": "number",
              "description": "Get cost associated with this job",
              "format": "double",
              "readOnly": true
            },
            "customCost": {
              "type": "number",
              "description": "Get or set a custom cost value for this job",
              "format": "double"
            },
            "output": {
              "type": "string",
              "description": "An application provided output of the current status of this job",
              "nullable": true
            },
            "type": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "claimDuration": {
              "$ref": "#/components/schemas/TimeSpan"
            }
          },
          "additionalProperties": false
        },
        "ImageResourceTrainingJobRequest": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/JobRequest"
            }
          ],
          "properties": {
            "model": {
              "type": "string",
              "description": "The primary model to train upon",
              "nullable": true
            },
            "trainingData": {
              "type": "string",
              "description": "A url referring data that needs to be trained upon",
              "format": "uri",
              "nullable": true
            },
            "params": {
              "type": "object",
              "additionalProperties": {},
              "description": "A untyped set of parameters that are associated with this job",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ImageTransformJob": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/Job"
            }
          ],
          "properties": {
            "imageUrl": {
              "type": "string",
              "description": "The url of the image to transform",
              "format": "uri",
              "nullable": true
            },
            "transformer": {
              "$ref": "#/components/schemas/ImageTransformer"
            },
            "destinationBlobKey": {
              "type": "string",
              "description": "Get the key of the destination blob to upload the result to",
              "nullable": true
            },
            "params": {
              "type": "object",
              "additionalProperties": {},
              "description": "A untyped set of parameters that are associated with this job",
              "nullable": true
            },
            "destinationUrl": {
              "type": "string",
              "description": "Get or set the URL where the transformed image will be uploaded to",
              "format": "uri",
              "nullable": true
            },
            "cost": {
              "type": "number",
              "description": "Get cost associated with this job",
              "format": "double",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "ImageTransformJobRequest": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/JobRequest"
            }
          ],
          "properties": {
            "imageUrl": {
              "type": "string",
              "description": "The url of the image to transform",
              "format": "uri",
              "nullable": true
            },
            "blobKey": {
              "type": "string",
              "description": "The key of the blob to transform",
              "nullable": true
            },
            "replace": {
              "type": "boolean",
              "description": "Get or set if existing blobs should be replaced. Otherwise the existing blob will be returned"
            },
            "transformer": {
              "$ref": "#/components/schemas/ImageTransformer"
            },
            "destinationUrl": {
              "type": "string",
              "description": "Get or set the URL where the transformed image will be uploaded to",
              "format": "uri",
              "nullable": true
            },
            "params": {
              "type": "object",
              "additionalProperties": {
                "nullable": true
              },
              "description": "A untyped set of parameters that are associated with this job",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ImageTransformer": {
          "enum": ["Canny", "DepthZoe", "SoftedgePidinet", "Rembg"],
          "type": "string"
        },
        "IntPtr": {
          "type": "object",
          "additionalProperties": false
        },
        "Job": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "A unique id for this job",
              "nullable": true
            },
            "createdAt": {
              "type": "string",
              "description": "The date when this job got created",
              "format": "date-time"
            },
            "expireAt": {
              "type": "string",
              "description": "The date for when this job was set to expire",
              "format": "date-time",
              "nullable": true
            },
            "webhook": {
              "type": "string",
              "description": "A webhook to be invoked when the job receives a status update",
              "format": "uri",
              "nullable": true
            },
            "properties": {
              "type": "object",
              "additionalProperties": {},
              "description": "A set of user defined properties that can be used to index and partition this job",
              "nullable": true
            },
            "type": {
              "type": "string",
              "description": "The type of this job as a string",
              "nullable": true,
              "readOnly": true
            },
            "cost": {
              "type": "number",
              "description": "Get a cost estimate for this job",
              "format": "double",
              "readOnly": true
            },
            "maxRetryAttempt": {
              "type": "integer",
              "description": "The max number of retries before we give up",
              "format": "int32"
            },
            "dependencies": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Get or set a list of dependencies that this job has",
              "nullable": true
            },
            "issuedBy": {
              "type": "string",
              "description": "Get or set the name of the consumer that issued this job",
              "nullable": true
            },
            "claimDuration": {
              "$ref": "#/components/schemas/TimeSpan"
            }
          },
          "additionalProperties": false
        },
        "JobEvent": {
          "type": "object",
          "properties": {
            "jobId": {
              "type": "string",
              "nullable": true
            },
            "type": {
              "$ref": "#/components/schemas/JobEventType"
            },
            "dateTime": {
              "type": "string",
              "description": "Get the absolute datetime on which this event got created",
              "format": "date-time"
            },
            "provider": {
              "$ref": "#/components/schemas/Provider"
            },
            "workerId": {
              "type": "string",
              "description": "Get or set the workerId that is associated with this event",
              "nullable": true
            },
            "context": {
              "type": "object",
              "additionalProperties": {},
              "description": "An optional set of key/value pairs that can be used to provide additional context.",
              "nullable": true
            },
            "claimDuration": {
              "$ref": "#/components/schemas/TimeSpan"
            },
            "jobDuration": {
              "$ref": "#/components/schemas/TimeSpan"
            },
            "retryAttempt": {
              "type": "integer",
              "description": "The retry attempt of this job",
              "format": "int32"
            },
            "cost": {
              "type": "number",
              "description": "The cost of the job associated with this event",
              "format": "double"
            },
            "jobProperties": {
              "type": "object",
              "additionalProperties": {},
              "description": "The properties of the job associated with this event",
              "nullable": true
            },
            "jobType": {
              "type": "string",
              "description": "Get the type of the job",
              "nullable": true
            },
            "jobPriority": {
              "type": "integer",
              "description": "The priority that is associated with this job",
              "format": "int32"
            },
            "claimHasCompleted": {
              "type": "boolean",
              "description": "Get wether this event marks the completion of a claim",
              "readOnly": true
            },
            "jobHasCompleted": {
              "type": "boolean",
              "description": "Get wether this event marks the completion of a job\r\nThis is determined based on the Civitai.Orchestration.Grains.Jobs.JobEvent.Type of this event",
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "JobEventType": {
          "enum": [
            "Initialized",
            "Claimed",
            "Rejected",
            "LateRejected",
            "ClaimExpired",
            "Updated",
            "Failed",
            "Succeeded",
            "Expired",
            "Deleted"
          ],
          "type": "string"
        },
        "JobRequest": {
          "required": ["$type"],
          "type": "object",
          "properties": {
            "$type": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "description": "Get or set the name of this job so that it can be referenced by other jobs",
              "nullable": true
            },
            "priority": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/FixedPriority"
                },
                {
                  "$ref": "#/components/schemas/RangedPriority"
                }
              ],
              "description": "Get or set a priority where lower values have priority over higher values",
              "nullable": true
            },
            "providers": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Provider"
              },
              "description": "Get or set a list of service providers to target with this job\r\nIf not specified then all providers will be targeted",
              "nullable": true
            },
            "expireAt": {
              "type": "string",
              "description": "An optional expiration date for this job",
              "format": "date-time",
              "nullable": true
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "nullable": true
              },
              "description": "A dictionary of user defined properties that are associated with this job template",
              "nullable": true
            },
            "callbackUrl": {
              "type": "string",
              "description": "Get or set a url that will be invoked upon completion of this job",
              "format": "uri",
              "nullable": true
            },
            "timeout": {
              "$ref": "#/components/schemas/TimeSpan"
            },
            "retries": {
              "type": "integer",
              "description": "The max number of retries before we give up",
              "format": "int32",
              "nullable": true
            },
            "dependencies": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Get or set a list of dependencies that this job has\r\nThese are the names of jobs that this job is dependent upon",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "discriminator": {
            "propertyName": "$type",
            "mapping": {
              "TextToImageJobTemplate": "#/components/schemas/TextToImageJobRequest",
              "ImageResourceTrainingJobTemplate": "#/components/schemas/ImageResourceTrainingJobRequest",
              "UploadBlobTemplate": "#/components/schemas/UploadBlobRequest",
              "GetBlobTemplate": "#/components/schemas/GetBlobRequest",
              "PinBlobTemplate": "#/components/schemas/PinBlobRequest",
              "UnpinBlobTemplate": "#/components/schemas/UnpinBlobRequest",
              "DeleteBlobTemplate": "#/components/schemas/DeleteBlobRequest",
              "ImageTransformJobTemplate": "#/components/schemas/ImageTransformJobRequest",
              "CopyAssetTemplate": "#/components/schemas/CopyAssetRequest",
              "ClearAssetTemplate": "#/components/schemas/ClearAssetRequest",
              "WDTaggingJobTemplate": "#/components/schemas/WDTaggingJobRequest",
              "MediaTaggingJobTemplate": "#/components/schemas/MediaTaggingJobRequest",
              "PrepareModelJobTemplate": "#/components/schemas/PrepareModelJobRequest",
              "ComfyJobTemplate": "#/components/schemas/ComfyJobRequest",
              "ImageEmbeddingJobTemplate": "#/components/schemas/ImageEmbeddingJobRequest",
              "RebootWorkerJobTemplate": "#/components/schemas/RebootWorkerJobRequest"
            }
          }
        },
        "JobStatus": {
          "type": "object",
          "properties": {
            "job": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TextToImageJob"
                },
                {
                  "$ref": "#/components/schemas/PingJob"
                },
                {
                  "$ref": "#/components/schemas/ImageResourceTrainingJob"
                },
                {
                  "$ref": "#/components/schemas/ImageTransformJob"
                },
                {
                  "$ref": "#/components/schemas/WDTaggingJob"
                },
                {
                  "$ref": "#/components/schemas/MediaTaggingJob"
                },
                {
                  "$ref": "#/components/schemas/PrepareModelJob"
                },
                {
                  "$ref": "#/components/schemas/ComfyJob"
                },
                {
                  "$ref": "#/components/schemas/ImageEmbeddingJob"
                },
                {
                  "$ref": "#/components/schemas/PinModelJob"
                },
                {
                  "$ref": "#/components/schemas/RebootWorkerJob"
                }
              ],
              "nullable": true
            },
            "jobId": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "cost": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "readOnly": true
            },
            "properties": {
              "type": "object",
              "additionalProperties": {},
              "nullable": true,
              "readOnly": true
            },
            "result": {
              "description": "A optional result of the job",
              "nullable": true
            },
            "lastEvent": {
              "$ref": "#/components/schemas/JobEvent"
            },
            "serviceProviders": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/ProviderJobStatus"
              },
              "description": "The position of this job in the different queues for different providers. If this is an empty object then this job remains unscheduled.",
              "nullable": true
            },
            "scheduled": {
              "type": "boolean",
              "description": "Wether",
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "JobStatusCollection": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "description": "A token that can be used to get a status update on all the jobs in the collection",
              "nullable": true
            },
            "jobs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/JobStatus"
              },
              "description": "A list of individual statuses for each generated job"
            }
          },
          "additionalProperties": false
        },
        "JobSupport": {
          "enum": ["Unsupported", "Unavailable", "Available"],
          "type": "string"
        },
        "JobTemplateList": {
          "type": "object",
          "properties": {
            "jobs": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/TextToImageJobRequest"
                  },
                  {
                    "$ref": "#/components/schemas/ImageResourceTrainingJobRequest"
                  },
                  {
                    "$ref": "#/components/schemas/UploadBlobRequest"
                  },
                  {
                    "$ref": "#/components/schemas/GetBlobRequest"
                  },
                  {
                    "$ref": "#/components/schemas/PinBlobRequest"
                  },
                  {
                    "$ref": "#/components/schemas/UnpinBlobRequest"
                  },
                  {
                    "$ref": "#/components/schemas/DeleteBlobRequest"
                  },
                  {
                    "$ref": "#/components/schemas/ImageTransformJobRequest"
                  },
                  {
                    "$ref": "#/components/schemas/CopyAssetRequest"
                  },
                  {
                    "$ref": "#/components/schemas/ClearAssetRequest"
                  },
                  {
                    "$ref": "#/components/schemas/WDTaggingJobRequest"
                  },
                  {
                    "$ref": "#/components/schemas/MediaTaggingJobRequest"
                  },
                  {
                    "$ref": "#/components/schemas/PrepareModelJobRequest"
                  },
                  {
                    "$ref": "#/components/schemas/ComfyJobRequest"
                  },
                  {
                    "$ref": "#/components/schemas/ImageEmbeddingJobRequest"
                  },
                  {
                    "$ref": "#/components/schemas/RebootWorkerJobRequest"
                  }
                ]
              }
            }
          },
          "additionalProperties": false
        },
        "LayoutKind": {
          "enum": ["Sequential", "Explicit", "Auto"],
          "type": "string"
        },
        "MediaTaggingJob": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/Job"
            }
          ],
          "properties": {
            "modelId": {
              "type": "integer",
              "format": "int32"
            },
            "mediaUrl": {
              "type": "string",
              "format": "uri",
              "nullable": true
            },
            "cost": {
              "type": "number",
              "format": "double",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "MediaTaggingJobRequest": {
          "required": ["mediaUrl", "modelId"],
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/JobRequest"
            }
          ],
          "properties": {
            "modelId": {
              "type": "integer",
              "format": "int32"
            },
            "mediaUrl": {
              "type": "string",
              "format": "uri"
            }
          },
          "additionalProperties": false
        },
        "MemberInfo": {
          "type": "object",
          "properties": {
            "memberType": {
              "$ref": "#/components/schemas/MemberTypes"
            },
            "name": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "declaringType": {
              "$ref": "#/components/schemas/Type"
            },
            "reflectedType": {
              "$ref": "#/components/schemas/Type"
            },
            "module": {
              "$ref": "#/components/schemas/Module"
            },
            "customAttributes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CustomAttributeData"
              },
              "nullable": true,
              "readOnly": true
            },
            "isCollectible": {
              "type": "boolean",
              "readOnly": true
            },
            "metadataToken": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "MemberTypes": {
          "enum": [
            "Constructor",
            "Event",
            "Field",
            "Method",
            "Property",
            "TypeInfo",
            "Custom",
            "NestedType",
            "All"
          ],
          "type": "string"
        },
        "MethodAttributes": {
          "enum": [
            "PrivateScope",
            "Private",
            "FamANDAssem",
            "Assembly",
            "Family",
            "FamORAssem",
            "Public",
            "MemberAccessMask",
            "UnmanagedExport",
            "Static",
            "Final",
            "Virtual",
            "HideBySig",
            "NewSlot",
            "CheckAccessOnOverride",
            "Abstract",
            "SpecialName",
            "RTSpecialName",
            "PinvokeImpl",
            "HasSecurity",
            "RequireSecObject",
            "ReservedMask"
          ],
          "type": "string"
        },
        "MethodBase": {
          "type": "object",
          "properties": {
            "memberType": {
              "$ref": "#/components/schemas/MemberTypes"
            },
            "name": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "declaringType": {
              "$ref": "#/components/schemas/Type"
            },
            "reflectedType": {
              "$ref": "#/components/schemas/Type"
            },
            "module": {
              "$ref": "#/components/schemas/Module"
            },
            "customAttributes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CustomAttributeData"
              },
              "nullable": true,
              "readOnly": true
            },
            "isCollectible": {
              "type": "boolean",
              "readOnly": true
            },
            "metadataToken": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "attributes": {
              "$ref": "#/components/schemas/MethodAttributes"
            },
            "methodImplementationFlags": {
              "$ref": "#/components/schemas/MethodImplAttributes"
            },
            "callingConvention": {
              "$ref": "#/components/schemas/CallingConventions"
            },
            "isAbstract": {
              "type": "boolean",
              "readOnly": true
            },
            "isConstructor": {
              "type": "boolean",
              "readOnly": true
            },
            "isFinal": {
              "type": "boolean",
              "readOnly": true
            },
            "isHideBySig": {
              "type": "boolean",
              "readOnly": true
            },
            "isSpecialName": {
              "type": "boolean",
              "readOnly": true
            },
            "isStatic": {
              "type": "boolean",
              "readOnly": true
            },
            "isVirtual": {
              "type": "boolean",
              "readOnly": true
            },
            "isAssembly": {
              "type": "boolean",
              "readOnly": true
            },
            "isFamily": {
              "type": "boolean",
              "readOnly": true
            },
            "isFamilyAndAssembly": {
              "type": "boolean",
              "readOnly": true
            },
            "isFamilyOrAssembly": {
              "type": "boolean",
              "readOnly": true
            },
            "isPrivate": {
              "type": "boolean",
              "readOnly": true
            },
            "isPublic": {
              "type": "boolean",
              "readOnly": true
            },
            "isConstructedGenericMethod": {
              "type": "boolean",
              "readOnly": true
            },
            "isGenericMethod": {
              "type": "boolean",
              "readOnly": true
            },
            "isGenericMethodDefinition": {
              "type": "boolean",
              "readOnly": true
            },
            "containsGenericParameters": {
              "type": "boolean",
              "readOnly": true
            },
            "methodHandle": {
              "$ref": "#/components/schemas/RuntimeMethodHandle"
            },
            "isSecurityCritical": {
              "type": "boolean",
              "readOnly": true
            },
            "isSecuritySafeCritical": {
              "type": "boolean",
              "readOnly": true
            },
            "isSecurityTransparent": {
              "type": "boolean",
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "MethodImplAttributes": {
          "enum": [
            "IL",
            "Native",
            "OPTIL",
            "CodeTypeMask",
            "ManagedMask",
            "NoInlining",
            "ForwardRef",
            "Synchronized",
            "NoOptimization",
            "PreserveSig",
            "AggressiveInlining",
            "AggressiveOptimization",
            "InternalCall",
            "MaxMethodImplVal"
          ],
          "type": "string"
        },
        "MethodInfo": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "declaringType": {
              "$ref": "#/components/schemas/Type"
            },
            "reflectedType": {
              "$ref": "#/components/schemas/Type"
            },
            "module": {
              "$ref": "#/components/schemas/Module"
            },
            "customAttributes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CustomAttributeData"
              },
              "nullable": true,
              "readOnly": true
            },
            "isCollectible": {
              "type": "boolean",
              "readOnly": true
            },
            "metadataToken": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "attributes": {
              "$ref": "#/components/schemas/MethodAttributes"
            },
            "methodImplementationFlags": {
              "$ref": "#/components/schemas/MethodImplAttributes"
            },
            "callingConvention": {
              "$ref": "#/components/schemas/CallingConventions"
            },
            "isAbstract": {
              "type": "boolean",
              "readOnly": true
            },
            "isConstructor": {
              "type": "boolean",
              "readOnly": true
            },
            "isFinal": {
              "type": "boolean",
              "readOnly": true
            },
            "isHideBySig": {
              "type": "boolean",
              "readOnly": true
            },
            "isSpecialName": {
              "type": "boolean",
              "readOnly": true
            },
            "isStatic": {
              "type": "boolean",
              "readOnly": true
            },
            "isVirtual": {
              "type": "boolean",
              "readOnly": true
            },
            "isAssembly": {
              "type": "boolean",
              "readOnly": true
            },
            "isFamily": {
              "type": "boolean",
              "readOnly": true
            },
            "isFamilyAndAssembly": {
              "type": "boolean",
              "readOnly": true
            },
            "isFamilyOrAssembly": {
              "type": "boolean",
              "readOnly": true
            },
            "isPrivate": {
              "type": "boolean",
              "readOnly": true
            },
            "isPublic": {
              "type": "boolean",
              "readOnly": true
            },
            "isConstructedGenericMethod": {
              "type": "boolean",
              "readOnly": true
            },
            "isGenericMethod": {
              "type": "boolean",
              "readOnly": true
            },
            "isGenericMethodDefinition": {
              "type": "boolean",
              "readOnly": true
            },
            "containsGenericParameters": {
              "type": "boolean",
              "readOnly": true
            },
            "methodHandle": {
              "$ref": "#/components/schemas/RuntimeMethodHandle"
            },
            "isSecurityCritical": {
              "type": "boolean",
              "readOnly": true
            },
            "isSecuritySafeCritical": {
              "type": "boolean",
              "readOnly": true
            },
            "isSecurityTransparent": {
              "type": "boolean",
              "readOnly": true
            },
            "memberType": {
              "$ref": "#/components/schemas/MemberTypes"
            },
            "returnParameter": {
              "$ref": "#/components/schemas/ParameterInfo"
            },
            "returnType": {
              "$ref": "#/components/schemas/Type"
            },
            "returnTypeCustomAttributes": {
              "$ref": "#/components/schemas/ICustomAttributeProvider"
            }
          },
          "additionalProperties": false
        },
        "ModelError": {
          "type": "object",
          "properties": {
            "exception": {
              "$ref": "#/components/schemas/Exception"
            },
            "errorMessage": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "ModelStateEntry": {
          "type": "object",
          "properties": {
            "rawValue": {
              "nullable": true
            },
            "attemptedValue": {
              "type": "string",
              "nullable": true
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ModelError"
              },
              "nullable": true,
              "readOnly": true
            },
            "validationState": {
              "$ref": "#/components/schemas/ModelValidationState"
            },
            "isContainerNode": {
              "type": "boolean",
              "readOnly": true
            },
            "children": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ModelStateEntry"
              },
              "nullable": true,
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "ModelValidationState": {
          "enum": ["Unvalidated", "Invalid", "Valid", "Skipped"],
          "type": "string"
        },
        "Module": {
          "type": "object",
          "properties": {
            "assembly": {
              "$ref": "#/components/schemas/Assembly"
            },
            "fullyQualifiedName": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "name": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "mdStreamVersion": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "moduleVersionId": {
              "type": "string",
              "format": "uuid",
              "readOnly": true
            },
            "scopeName": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "moduleHandle": {
              "$ref": "#/components/schemas/ModuleHandle"
            },
            "customAttributes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CustomAttributeData"
              },
              "nullable": true,
              "readOnly": true
            },
            "metadataToken": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "ModuleHandle": {
          "type": "object",
          "properties": {
            "mdStreamVersion": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "ParameterAttributes": {
          "enum": [
            "None",
            "In",
            "Out",
            "Lcid",
            "Retval",
            "Optional",
            "HasDefault",
            "HasFieldMarshal",
            "Reserved3",
            "Reserved4",
            "ReservedMask"
          ],
          "type": "string"
        },
        "ParameterInfo": {
          "type": "object",
          "properties": {
            "attributes": {
              "$ref": "#/components/schemas/ParameterAttributes"
            },
            "member": {
              "$ref": "#/components/schemas/MemberInfo"
            },
            "name": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "parameterType": {
              "$ref": "#/components/schemas/Type"
            },
            "position": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "isIn": {
              "type": "boolean",
              "readOnly": true
            },
            "isLcid": {
              "type": "boolean",
              "readOnly": true
            },
            "isOptional": {
              "type": "boolean",
              "readOnly": true
            },
            "isOut": {
              "type": "boolean",
              "readOnly": true
            },
            "isRetval": {
              "type": "boolean",
              "readOnly": true
            },
            "defaultValue": {
              "nullable": true,
              "readOnly": true
            },
            "rawDefaultValue": {
              "nullable": true,
              "readOnly": true
            },
            "hasDefaultValue": {
              "type": "boolean",
              "readOnly": true
            },
            "customAttributes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CustomAttributeData"
              },
              "nullable": true,
              "readOnly": true
            },
            "metadataToken": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "PinBlobRequest": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/JobRequest"
            }
          ],
          "properties": {
            "key": {
              "type": "string",
              "description": "Get or set the key of the blob to pin",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PinModelJob": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/Job"
            }
          ],
          "properties": {
            "assets": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/ImageJobNetworkParams"
              },
              "nullable": true
            },
            "type": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "PingJob": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/Job"
            }
          ],
          "properties": {
            "type": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "PrepareModelAction": {
          "enum": ["Upload", "Pin"],
          "type": "string"
        },
        "PrepareModelJob": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/Job"
            }
          ],
          "properties": {
            "baseModel": {
              "$ref": "#/components/schemas/BaseModel"
            },
            "model": {
              "type": "string",
              "nullable": true
            },
            "action": {
              "$ref": "#/components/schemas/PrepareModelAction"
            },
            "type": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "PrepareModelJobRequest": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/JobRequest"
            }
          ],
          "properties": {
            "baseModel": {
              "$ref": "#/components/schemas/BaseModel"
            },
            "model": {
              "type": "string",
              "description": "Get or set the model to prepare",
              "nullable": true
            },
            "action": {
              "$ref": "#/components/schemas/PrepareModelAction"
            }
          },
          "additionalProperties": false
        },
        "Priority": {
          "type": "object",
          "additionalProperties": false
        },
        "ProblemDetails": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "nullable": true
            },
            "title": {
              "type": "string",
              "nullable": true
            },
            "status": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "detail": {
              "type": "string",
              "nullable": true
            },
            "instance": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": {}
        },
        "PropertyAttributes": {
          "enum": [
            "None",
            "SpecialName",
            "RTSpecialName",
            "HasDefault",
            "Reserved2",
            "Reserved3",
            "Reserved4",
            "ReservedMask"
          ],
          "type": "string"
        },
        "PropertyInfo": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "declaringType": {
              "$ref": "#/components/schemas/Type"
            },
            "reflectedType": {
              "$ref": "#/components/schemas/Type"
            },
            "module": {
              "$ref": "#/components/schemas/Module"
            },
            "customAttributes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CustomAttributeData"
              },
              "nullable": true,
              "readOnly": true
            },
            "isCollectible": {
              "type": "boolean",
              "readOnly": true
            },
            "metadataToken": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "memberType": {
              "$ref": "#/components/schemas/MemberTypes"
            },
            "propertyType": {
              "$ref": "#/components/schemas/Type"
            },
            "attributes": {
              "$ref": "#/components/schemas/PropertyAttributes"
            },
            "isSpecialName": {
              "type": "boolean",
              "readOnly": true
            },
            "canRead": {
              "type": "boolean",
              "readOnly": true
            },
            "canWrite": {
              "type": "boolean",
              "readOnly": true
            },
            "getMethod": {
              "$ref": "#/components/schemas/MethodInfo"
            },
            "setMethod": {
              "$ref": "#/components/schemas/MethodInfo"
            }
          },
          "additionalProperties": false
        },
        "Provider": {
          "enum": [
            "Civitai",
            "OctoML",
            "SaladML",
            "PicFinder",
            "RunPods",
            "ValdiAI",
            "OctoMLNext",
            "RunDiffusion",
            "SaladShared"
          ],
          "type": "string"
        },
        "ProviderAssetAvailability": {
          "type": "object",
          "properties": {
            "availability": {
              "$ref": "#/components/schemas/WorkerAssetAvailability"
            },
            "workers": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "ProviderJobQueuePosition": {
          "type": "object",
          "properties": {
            "precedingJobs": {
              "type": "integer",
              "description": "The exact position in the queue",
              "format": "int32"
            },
            "precedingCost": {
              "type": "number",
              "description": "The exact cost that is preceding",
              "format": "double"
            },
            "throughputRate": {
              "type": "number",
              "description": "The estimated throughput rate of the queue",
              "format": "double"
            },
            "workerId": {
              "type": "string",
              "description": "The id of the worker that this job is queued with",
              "nullable": true
            },
            "estimatedStartDuration": {
              "$ref": "#/components/schemas/TimeSpan"
            },
            "estimatedStartDate": {
              "type": "string",
              "description": "The date before the job is estimated to be started. Null if we do not have an estimate yet",
              "format": "date-time",
              "nullable": true,
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "ProviderJobStatus": {
          "type": "object",
          "properties": {
            "support": {
              "$ref": "#/components/schemas/JobSupport"
            },
            "queuePosition": {
              "$ref": "#/components/schemas/ProviderJobQueuePosition"
            }
          },
          "additionalProperties": false
        },
        "QueryJobsRequest": {
          "type": "object",
          "properties": {
            "cursor": {
              "type": "string",
              "nullable": true
            },
            "properties": {
              "type": "object",
              "additionalProperties": {},
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "QueryJobsResult": {
          "type": "object",
          "properties": {
            "cursor": {
              "type": "string",
              "nullable": true
            },
            "jobs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/JobStatus"
              }
            }
          },
          "additionalProperties": false
        },
        "RangedPriority": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/Priority"
            }
          ],
          "properties": {
            "min": {
              "type": "integer",
              "description": "",
              "format": "int32"
            },
            "max": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          },
          "additionalProperties": false,
          "description": "A priority will be dynamically calculated between the min and max values. \r\nThe value will be calculated based on the number of recent requests that share the same properties."
        },
        "ReadOnlySpan`1": {
          "type": "object",
          "properties": {
            "length": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "isEmpty": {
              "type": "boolean",
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "RebootWorkerJob": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/Job"
            }
          ],
          "properties": {
            "type": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "RebootWorkerJobRequest": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/JobRequest"
            }
          ],
          "additionalProperties": false
        },
        "RuntimeFieldHandle": {
          "type": "object",
          "properties": {
            "value": {
              "$ref": "#/components/schemas/IntPtr"
            }
          },
          "additionalProperties": false
        },
        "RuntimeMethodHandle": {
          "type": "object",
          "properties": {
            "value": {
              "$ref": "#/components/schemas/IntPtr"
            }
          },
          "additionalProperties": false
        },
        "RuntimeTypeHandle": {
          "type": "object",
          "properties": {
            "value": {
              "$ref": "#/components/schemas/IntPtr"
            }
          },
          "additionalProperties": false
        },
        "Scheduler": {
          "enum": [
            "EulerA",
            "Euler",
            "LMS",
            "Heun",
            "DPM2",
            "DPM2A",
            "DPM2SA",
            "DPM2M",
            "DPMSDE",
            "DPMFast",
            "DPMAdaptive",
            "LMSKarras",
            "DPM2Karras",
            "DPM2AKarras",
            "DPM2SAKarras",
            "DPM2MKarras",
            "DPMSDEKarras",
            "DDIM",
            "PLMS",
            "UniPC",
            "Undefined",
            "LCM",
            "DDPM",
            "DEIS"
          ],
          "type": "string"
        },
        "SecurityRuleSet": {
          "enum": ["None", "Level1", "Level2"],
          "type": "string"
        },
        "StructLayoutAttribute": {
          "type": "object",
          "properties": {
            "typeId": {
              "nullable": true,
              "readOnly": true
            },
            "value": {
              "$ref": "#/components/schemas/LayoutKind"
            }
          },
          "additionalProperties": false
        },
        "TaintJobRequest": {
          "type": "object",
          "properties": {
            "reason": {
              "type": "string",
              "nullable": true
            },
            "context": {
              "type": "object",
              "additionalProperties": {},
              "description": "An optional set of key/value pairs that can be used to provide additional context.",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "TaintJobsRequest": {
          "type": "object",
          "properties": {
            "reason": {
              "type": "string",
              "nullable": true
            },
            "context": {
              "type": "object",
              "additionalProperties": {},
              "nullable": true
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "nullable": true
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "TaintJobsResult": {
          "type": "object",
          "properties": {
            "jobs": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "TextToImageJob": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/Job"
            }
          ],
          "properties": {
            "model": {
              "type": "string",
              "nullable": true
            },
            "params": {
              "$ref": "#/components/schemas/ImageJobParams"
            },
            "imageHash": {
              "type": "string",
              "nullable": true
            },
            "additionalNetworks": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/ImageJobNetworkParams"
              },
              "description": "Get or set a associative list of additional networks. Each network is identified by a hash code",
              "nullable": true
            },
            "destinationUrl": {
              "type": "string",
              "description": "Get or set the URL where the image will be uploaded to",
              "format": "uri",
              "nullable": true
            },
            "baseModel": {
              "$ref": "#/components/schemas/BaseModel"
            },
            "storeAsBlob": {
              "type": "boolean",
              "description": "Wether to store the image as a blob or as a legacy image"
            },
            "controlNets": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ImageJobControlNet"
              },
              "description": "Get or set a list of control nets that should be applied with this textToImage job",
              "nullable": true
            },
            "cost": {
              "type": "number",
              "format": "double",
              "readOnly": true
            },
            "claimDuration": {
              "$ref": "#/components/schemas/TimeSpan"
            },
            "type": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "TextToImageJobRequest": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/JobRequest"
            }
          ],
          "properties": {
            "quantity": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Get or sets the number of images to generate",
              "format": "int32"
            },
            "model": {
              "type": "string",
              "description": "The AIR of the checkpoint model to use for generation",
              "nullable": true
            },
            "additionalNetworks": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/ImageJobNetworkParams"
              },
              "description": "Get or set a associative list of additional networks. Use the AIR of the network as the key.",
              "nullable": true
            },
            "controlNets": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ImageJobControlNet"
              },
              "description": "Get or set a associative list of additional networks.",
              "nullable": true
            },
            "params": {
              "$ref": "#/components/schemas/ImageJobParams"
            }
          },
          "additionalProperties": false
        },
        "TimeSpan": {
          "type": "object",
          "properties": {
            "ticks": {
              "type": "integer",
              "format": "int64"
            },
            "days": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "hours": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "milliseconds": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "microseconds": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "nanoseconds": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "minutes": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "seconds": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "totalDays": {
              "type": "number",
              "format": "double",
              "readOnly": true
            },
            "totalHours": {
              "type": "number",
              "format": "double",
              "readOnly": true
            },
            "totalMilliseconds": {
              "type": "number",
              "format": "double",
              "readOnly": true
            },
            "totalMicroseconds": {
              "type": "number",
              "format": "double",
              "readOnly": true
            },
            "totalNanoseconds": {
              "type": "number",
              "format": "double",
              "readOnly": true
            },
            "totalMinutes": {
              "type": "number",
              "format": "double",
              "readOnly": true
            },
            "totalSeconds": {
              "type": "number",
              "format": "double",
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "Type": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "customAttributes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CustomAttributeData"
              },
              "nullable": true,
              "readOnly": true
            },
            "isCollectible": {
              "type": "boolean",
              "readOnly": true
            },
            "metadataToken": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "isInterface": {
              "type": "boolean",
              "readOnly": true
            },
            "memberType": {
              "$ref": "#/components/schemas/MemberTypes"
            },
            "namespace": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "assemblyQualifiedName": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "fullName": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "assembly": {
              "$ref": "#/components/schemas/Assembly"
            },
            "module": {
              "$ref": "#/components/schemas/Module"
            },
            "isNested": {
              "type": "boolean",
              "readOnly": true
            },
            "declaringType": {
              "$ref": "#/components/schemas/Type"
            },
            "declaringMethod": {
              "$ref": "#/components/schemas/MethodBase"
            },
            "reflectedType": {
              "$ref": "#/components/schemas/Type"
            },
            "underlyingSystemType": {
              "$ref": "#/components/schemas/Type"
            },
            "isTypeDefinition": {
              "type": "boolean",
              "readOnly": true
            },
            "isArray": {
              "type": "boolean",
              "readOnly": true
            },
            "isByRef": {
              "type": "boolean",
              "readOnly": true
            },
            "isPointer": {
              "type": "boolean",
              "readOnly": true
            },
            "isConstructedGenericType": {
              "type": "boolean",
              "readOnly": true
            },
            "isGenericParameter": {
              "type": "boolean",
              "readOnly": true
            },
            "isGenericTypeParameter": {
              "type": "boolean",
              "readOnly": true
            },
            "isGenericMethodParameter": {
              "type": "boolean",
              "readOnly": true
            },
            "isGenericType": {
              "type": "boolean",
              "readOnly": true
            },
            "isGenericTypeDefinition": {
              "type": "boolean",
              "readOnly": true
            },
            "isSZArray": {
              "type": "boolean",
              "readOnly": true
            },
            "isVariableBoundArray": {
              "type": "boolean",
              "readOnly": true
            },
            "isByRefLike": {
              "type": "boolean",
              "readOnly": true
            },
            "isFunctionPointer": {
              "type": "boolean",
              "readOnly": true
            },
            "isUnmanagedFunctionPointer": {
              "type": "boolean",
              "readOnly": true
            },
            "hasElementType": {
              "type": "boolean",
              "readOnly": true
            },
            "genericTypeArguments": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Type"
              },
              "nullable": true,
              "readOnly": true
            },
            "genericParameterPosition": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "genericParameterAttributes": {
              "$ref": "#/components/schemas/GenericParameterAttributes"
            },
            "attributes": {
              "$ref": "#/components/schemas/TypeAttributes"
            },
            "isAbstract": {
              "type": "boolean",
              "readOnly": true
            },
            "isImport": {
              "type": "boolean",
              "readOnly": true
            },
            "isSealed": {
              "type": "boolean",
              "readOnly": true
            },
            "isSpecialName": {
              "type": "boolean",
              "readOnly": true
            },
            "isClass": {
              "type": "boolean",
              "readOnly": true
            },
            "isNestedAssembly": {
              "type": "boolean",
              "readOnly": true
            },
            "isNestedFamANDAssem": {
              "type": "boolean",
              "readOnly": true
            },
            "isNestedFamily": {
              "type": "boolean",
              "readOnly": true
            },
            "isNestedFamORAssem": {
              "type": "boolean",
              "readOnly": true
            },
            "isNestedPrivate": {
              "type": "boolean",
              "readOnly": true
            },
            "isNestedPublic": {
              "type": "boolean",
              "readOnly": true
            },
            "isNotPublic": {
              "type": "boolean",
              "readOnly": true
            },
            "isPublic": {
              "type": "boolean",
              "readOnly": true
            },
            "isAutoLayout": {
              "type": "boolean",
              "readOnly": true
            },
            "isExplicitLayout": {
              "type": "boolean",
              "readOnly": true
            },
            "isLayoutSequential": {
              "type": "boolean",
              "readOnly": true
            },
            "isAnsiClass": {
              "type": "boolean",
              "readOnly": true
            },
            "isAutoClass": {
              "type": "boolean",
              "readOnly": true
            },
            "isUnicodeClass": {
              "type": "boolean",
              "readOnly": true
            },
            "isCOMObject": {
              "type": "boolean",
              "readOnly": true
            },
            "isContextful": {
              "type": "boolean",
              "readOnly": true
            },
            "isEnum": {
              "type": "boolean",
              "readOnly": true
            },
            "isMarshalByRef": {
              "type": "boolean",
              "readOnly": true
            },
            "isPrimitive": {
              "type": "boolean",
              "readOnly": true
            },
            "isValueType": {
              "type": "boolean",
              "readOnly": true
            },
            "isSignatureType": {
              "type": "boolean",
              "readOnly": true
            },
            "isSecurityCritical": {
              "type": "boolean",
              "readOnly": true
            },
            "isSecuritySafeCritical": {
              "type": "boolean",
              "readOnly": true
            },
            "isSecurityTransparent": {
              "type": "boolean",
              "readOnly": true
            },
            "structLayoutAttribute": {
              "$ref": "#/components/schemas/StructLayoutAttribute"
            },
            "typeInitializer": {
              "$ref": "#/components/schemas/ConstructorInfo"
            },
            "typeHandle": {
              "$ref": "#/components/schemas/RuntimeTypeHandle"
            },
            "guid": {
              "type": "string",
              "format": "uuid",
              "readOnly": true
            },
            "baseType": {
              "$ref": "#/components/schemas/Type"
            },
            "containsGenericParameters": {
              "type": "boolean",
              "readOnly": true
            },
            "isVisible": {
              "type": "boolean",
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "TypeAttributes": {
          "enum": [
            "NotPublic",
            "Public",
            "NestedPublic",
            "NestedPrivate",
            "NestedFamily",
            "NestedAssembly",
            "NestedFamANDAssem",
            "VisibilityMask",
            "SequentialLayout",
            "ExplicitLayout",
            "LayoutMask",
            "Interface",
            "Abstract",
            "Sealed",
            "SpecialName",
            "RTSpecialName",
            "Import",
            "Serializable",
            "WindowsRuntime",
            "UnicodeClass",
            "AutoClass",
            "StringFormatMask",
            "HasSecurity",
            "ReservedMask",
            "BeforeFieldInit",
            "CustomFormatMask"
          ],
          "type": "string"
        },
        "TypeInfo": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "customAttributes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CustomAttributeData"
              },
              "nullable": true,
              "readOnly": true
            },
            "isCollectible": {
              "type": "boolean",
              "readOnly": true
            },
            "metadataToken": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "isInterface": {
              "type": "boolean",
              "readOnly": true
            },
            "memberType": {
              "$ref": "#/components/schemas/MemberTypes"
            },
            "namespace": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "assemblyQualifiedName": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "fullName": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            },
            "assembly": {
              "$ref": "#/components/schemas/Assembly"
            },
            "module": {
              "$ref": "#/components/schemas/Module"
            },
            "isNested": {
              "type": "boolean",
              "readOnly": true
            },
            "declaringType": {
              "$ref": "#/components/schemas/Type"
            },
            "declaringMethod": {
              "$ref": "#/components/schemas/MethodBase"
            },
            "reflectedType": {
              "$ref": "#/components/schemas/Type"
            },
            "underlyingSystemType": {
              "$ref": "#/components/schemas/Type"
            },
            "isTypeDefinition": {
              "type": "boolean",
              "readOnly": true
            },
            "isArray": {
              "type": "boolean",
              "readOnly": true
            },
            "isByRef": {
              "type": "boolean",
              "readOnly": true
            },
            "isPointer": {
              "type": "boolean",
              "readOnly": true
            },
            "isConstructedGenericType": {
              "type": "boolean",
              "readOnly": true
            },
            "isGenericParameter": {
              "type": "boolean",
              "readOnly": true
            },
            "isGenericTypeParameter": {
              "type": "boolean",
              "readOnly": true
            },
            "isGenericMethodParameter": {
              "type": "boolean",
              "readOnly": true
            },
            "isGenericType": {
              "type": "boolean",
              "readOnly": true
            },
            "isGenericTypeDefinition": {
              "type": "boolean",
              "readOnly": true
            },
            "isSZArray": {
              "type": "boolean",
              "readOnly": true
            },
            "isVariableBoundArray": {
              "type": "boolean",
              "readOnly": true
            },
            "isByRefLike": {
              "type": "boolean",
              "readOnly": true
            },
            "isFunctionPointer": {
              "type": "boolean",
              "readOnly": true
            },
            "isUnmanagedFunctionPointer": {
              "type": "boolean",
              "readOnly": true
            },
            "hasElementType": {
              "type": "boolean",
              "readOnly": true
            },
            "genericTypeArguments": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Type"
              },
              "nullable": true,
              "readOnly": true
            },
            "genericParameterPosition": {
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "genericParameterAttributes": {
              "$ref": "#/components/schemas/GenericParameterAttributes"
            },
            "attributes": {
              "$ref": "#/components/schemas/TypeAttributes"
            },
            "isAbstract": {
              "type": "boolean",
              "readOnly": true
            },
            "isImport": {
              "type": "boolean",
              "readOnly": true
            },
            "isSealed": {
              "type": "boolean",
              "readOnly": true
            },
            "isSpecialName": {
              "type": "boolean",
              "readOnly": true
            },
            "isClass": {
              "type": "boolean",
              "readOnly": true
            },
            "isNestedAssembly": {
              "type": "boolean",
              "readOnly": true
            },
            "isNestedFamANDAssem": {
              "type": "boolean",
              "readOnly": true
            },
            "isNestedFamily": {
              "type": "boolean",
              "readOnly": true
            },
            "isNestedFamORAssem": {
              "type": "boolean",
              "readOnly": true
            },
            "isNestedPrivate": {
              "type": "boolean",
              "readOnly": true
            },
            "isNestedPublic": {
              "type": "boolean",
              "readOnly": true
            },
            "isNotPublic": {
              "type": "boolean",
              "readOnly": true
            },
            "isPublic": {
              "type": "boolean",
              "readOnly": true
            },
            "isAutoLayout": {
              "type": "boolean",
              "readOnly": true
            },
            "isExplicitLayout": {
              "type": "boolean",
              "readOnly": true
            },
            "isLayoutSequential": {
              "type": "boolean",
              "readOnly": true
            },
            "isAnsiClass": {
              "type": "boolean",
              "readOnly": true
            },
            "isAutoClass": {
              "type": "boolean",
              "readOnly": true
            },
            "isUnicodeClass": {
              "type": "boolean",
              "readOnly": true
            },
            "isCOMObject": {
              "type": "boolean",
              "readOnly": true
            },
            "isContextful": {
              "type": "boolean",
              "readOnly": true
            },
            "isEnum": {
              "type": "boolean",
              "readOnly": true
            },
            "isMarshalByRef": {
              "type": "boolean",
              "readOnly": true
            },
            "isPrimitive": {
              "type": "boolean",
              "readOnly": true
            },
            "isValueType": {
              "type": "boolean",
              "readOnly": true
            },
            "isSignatureType": {
              "type": "boolean",
              "readOnly": true
            },
            "isSecurityCritical": {
              "type": "boolean",
              "readOnly": true
            },
            "isSecuritySafeCritical": {
              "type": "boolean",
              "readOnly": true
            },
            "isSecurityTransparent": {
              "type": "boolean",
              "readOnly": true
            },
            "structLayoutAttribute": {
              "$ref": "#/components/schemas/StructLayoutAttribute"
            },
            "typeInitializer": {
              "$ref": "#/components/schemas/ConstructorInfo"
            },
            "typeHandle": {
              "$ref": "#/components/schemas/RuntimeTypeHandle"
            },
            "guid": {
              "type": "string",
              "format": "uuid",
              "readOnly": true
            },
            "baseType": {
              "$ref": "#/components/schemas/Type"
            },
            "containsGenericParameters": {
              "type": "boolean",
              "readOnly": true
            },
            "isVisible": {
              "type": "boolean",
              "readOnly": true
            },
            "genericTypeParameters": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Type"
              },
              "nullable": true,
              "readOnly": true
            },
            "declaredConstructors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ConstructorInfo"
              },
              "nullable": true,
              "readOnly": true
            },
            "declaredEvents": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EventInfo"
              },
              "nullable": true,
              "readOnly": true
            },
            "declaredFields": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FieldInfo"
              },
              "nullable": true,
              "readOnly": true
            },
            "declaredMembers": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MemberInfo"
              },
              "nullable": true,
              "readOnly": true
            },
            "declaredMethods": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MethodInfo"
              },
              "nullable": true,
              "readOnly": true
            },
            "declaredNestedTypes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TypeInfo"
              },
              "nullable": true,
              "readOnly": true
            },
            "declaredProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PropertyInfo"
              },
              "nullable": true,
              "readOnly": true
            },
            "implementedInterfaces": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Type"
              },
              "nullable": true,
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "UnpinBlobRequest": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/JobRequest"
            }
          ],
          "properties": {
            "key": {
              "type": "string",
              "description": "Get or set the key of the blob to pin",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "UploadBlobRequest": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/JobRequest"
            }
          ],
          "properties": {
            "key": {
              "type": "string",
              "description": "Get or set the key of the blob to upload. If no key is specified then a new unique key will be generated",
              "nullable": true
            },
            "replace": {
              "type": "boolean",
              "description": "Get or set if existing blobs should be replaced"
            },
            "duration": {
              "$ref": "#/components/schemas/TimeSpan"
            }
          },
          "additionalProperties": false
        },
        "WDTaggingJob": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/Job"
            }
          ],
          "properties": {
            "model": {
              "type": "string",
              "nullable": true
            },
            "mediaUrl": {
              "type": "string",
              "format": "uri",
              "nullable": true
            },
            "threshold": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "cost": {
              "type": "number",
              "format": "double",
              "readOnly": true
            },
            "claimDuration": {
              "$ref": "#/components/schemas/TimeSpan"
            },
            "type": {
              "type": "string",
              "nullable": true,
              "readOnly": true
            }
          },
          "additionalProperties": false
        },
        "WDTaggingJobRequest": {
          "required": ["mediaUrl", "model"],
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/JobRequest"
            }
          ],
          "properties": {
            "model": {
              "minLength": 1,
              "type": "string"
            },
            "mediaUrl": {
              "type": "string",
              "format": "uri"
            },
            "threshold": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "WorkerAssetAvailability": {
          "enum": ["Unknown", "Unsupported", "Unavailable", "Available"],
          "type": "string"
        }
      },
      "securitySchemes": {
        "ApiKey": {
          "type": "apiKey",
          "description": "Copy 'Bearer ' + valid Authorization token into field",
          "name": "Authorization",
          "in": "header"
        }
      }
    },
    "security": [
      {
        "ApiKey": []
      }
    ]
  }